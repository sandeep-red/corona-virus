{"version":3,"sources":["Card.js","Info.js","CoronaTable.js","CoronaSearch.js","Scroll.js","Particlejs.js","Select.js","Corona.js","serviceWorker.js","index.js"],"names":["Card","props","className","id","style","fontSize","country","toUpperCase","href","target","rel","Color","cases","deaths","Info","CoronaTable","key","data","useState","extraData","setData","show","setShow","Object","keys","map","a","i","value","onClick","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Body","e","CoronaSearch","change","total","parseInt","replace","textAlign","marginTop","type","name","placeholder","onChange","scrollamount","behavior","direction","color","Scroll","overflowY","height","children","Particlejs","params","particles","number","density","enable","value_area","Select","sorter","justifyContent","display","marginRight","htmlFor","Corona","istable","settable","setdata","filtereddata","setfiltereddata","loader","setloader","useEffect","trackPromise","fetch","then","res","json","reesdata","newdata","filter","toLowerCase","includes","console","log","event","byDeath","slice","sort","b","totalDeaths","byCases","totalCases","byName","place1","place2","width","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.543dc970.chunk.js","sourcesContent":["  \r\nimport React, { useEffect,useState } from 'react';\r\nimport 'tachyons';\r\nimport Axios from 'axios';\r\n\r\nfunction Card(props){\r\n    // const [url, seturl] = useState('')\r\n    // useEffect(()=>{\r\n    //     Axios.get(`https://restcountries.eu/rest/v2/name/${props.country}`).then(res=>{\r\n    //         seturl(res.flag)\r\n    //         console.log(res.flag)\r\n    //     })\r\n    // })\r\n    \r\n    return(\r\n        <div className = 'tc dib br3 pa3 ma1 grow' id=\"card\">\r\n            {/* <img alt=\"blah\" src={url}></img> */}\r\n           <h1 style={{fontSize:\"3vw\"}}>{props.country.toUpperCase()}</h1>\r\n           <a href={`https://www.google.com/maps/place/${props.country}`} target='_blank' rel=\"noopener noreferrer\" style={{Color:\"yellow\"}}>see in map</a>\r\n           <h4>Confirmed cases: {props.cases}</h4>\r\n           <h4>Deaths: {props.deaths}</h4>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './Corona.css'\r\n\r\nfunction Info({data}) {\r\n    console.log(data)\r\n    let key=Object.keys(data)\r\n    return (\r\n        <div className = \"infobox\">\r\n            <div className=\"innerinfo\">\r\n              <list className=\"list\">{\r\n                    key.map((e)=>{\r\n                        return <ul>{e.toUpperCase()} : {data[e].toUpperCase()}</ul>\r\n                        \r\n                    })\r\n                }\r\n                </list>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React,{useState} from 'react';\r\nimport Card from './Card';\r\nimport './Corona.css';\r\nimport Info from './Info'\r\nimport Modal from 'react-bootstrap/Modal'\r\nfunction CoronaTable({data}) {   \r\n    \r\n    let s=0\r\n\r\n    const [extraData, setData] = useState([]);\r\n    // const [extra, setExtra] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    // const keys=Object.keys(data[0])\r\n    // data.map((a,i)=>{\r\n    //     s=s+parseInt(a['Deaths'])\r\n    //     return null\r\n    // })\r\n    // console.log(s)\r\n    // let d=data[0]\r\n    // console.log(d)\r\n    // if(d)\r\n    // console.log(keys)\r\n        // s=data.map((a,i)=>{\r\n        //    return parseInt(a['Deaths'])\r\n            \r\n        // })\r\n        \r\n        // console.log(s.reduce((value,total)=>{\r\n        //         return value+total\r\n       \r\n        let key\r\n         \r\n      key=Object.keys(data[0])\r\n      \r\n    return(\r\n        <div className=\"cardarea\">\r\n        {\r\n            data.map((a,i)=>{\r\n                return(\r\n                   <button value={a} key = {i} onClick={()=>{\r\n                        setData(a);\r\n                        // setExtra(true);\r\n                        setShow(true)\r\n                    }}><Card key = {i}\r\n                        country = {data[i]['country']} \r\n                        cases = {data[i]['totalCases']} \r\n                        deaths = {data[i]['totalDeaths']}\r\n                     /></button>                \r\n    \r\n     \r\n                ); \r\n            })\r\n        }\r\n        <Modal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n         \r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        \r\n        <list className=\"list\">{\r\n           \r\n                    key.map((e)=>{\r\n                        \r\n                        if(e&&extraData[e])\r\n                        return <ul >{e.toUpperCase()} : {extraData[e].toUpperCase()}</ul>\r\n                        \r\n                    })\r\n                }\r\n                </list>\r\n        </Modal.Body>\r\n      </Modal>\r\n        </div>\r\n    );  \r\n    }\r\n    \r\n\r\nexport default CoronaTable\r\n","import React from 'react'\r\n\r\nfunction CoronaSearch({change,data}) {\r\n    let total=0\r\n    data.map((e)=>{\r\n        \r\n        if(e['totalDeaths']){\r\n            total+=parseInt(e['totalDeaths'].replace(',',''))\r\n            \r\n        }\r\n        return null\r\n    })\r\n   \r\n    return (\r\n        <div style={{textAlign:\"center\",marginTop:\"0px\"}}>\r\n            <input type=\"text\" name=\"search\" id=\"search\" placeholder=\"search\" onChange={change}/>\r\n            <marquee scrollamount=\"10\" behavior=\"scroll\" direction=\"left\" style={{color:\"red\",marginTop:\"5px\",fontSize:\"20px\"}}>*******************************death toll is {total}*******************************</marquee>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoronaSearch\r\n","import React from 'react';\r\n\r\nfunction Scroll(props){\r\n    return(\r\n        <div style = {{overflowY: 'scroll', height: '80vh'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll","import Particles from 'react-particles-js';\r\nimport React from 'react';\r\nimport './Particlejs.css';\r\n\r\nfunction Particlejs(){\r\n    return(\r\n        <Particles className=\"particles\"\r\n            params={{\r\n                  particles: {\r\n                      number: {\r\n                          value: 75,\r\n                          density: {\r\n                              enable: true,\r\n                              value_area: 800\r\n                          }\r\n                      }\r\n                  }\r\n              }} />\r\n    )\r\n}\r\n\r\nexport default Particlejs;","import React from 'react'\r\nimport './Corona.css'\r\n\r\nfunction Select({sorter}) {\r\n    return (\r\n        <div style={{justifyContent:\"flex-end\",display:\"flex\",marginRight:\"20px\"}}>\r\n        <label style={{color:\"white\",fontSize:\"1.7vw\",marginTop:'0.7vw',marginRight:\"0.4vw\"}} htmlFor=\"sort\">Sort by:</label>\r\n            <select className='select-css' id='select' onClick={sorter}>\r\n                <option value='cases'>by cases</option>\r\n                <option value='death'>by deaths</option>\r\n                <option value='name'>by name</option> \r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React, { useState,useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport CoronaTable from './CoronaTable'\r\nimport CoronaSearch from './CoronaSearch'\r\nimport Scroll from './Scroll'\r\nimport './Corona.css'\r\nimport Particlejs from './Particlejs'\r\nimport Select from './Select'\r\nimport { trackPromise} from 'react-promise-tracker';\r\nimport Spinner from './Spinner'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction Corona() {\r\n    const [istable,settable]=useState(false)\r\n    const [data, setdata] = useState([])\r\n    const [filtereddata, setfiltereddata] = useState([])\r\n    const [loader,setloader]=useState(false)\r\n    let total=0\r\n    useEffect(()=>{\r\n        trackPromise(fetch(\"https://shenoy-covid19-api.herokuapp.com/count\").then(res=>{\r\n            //  console.log(res)\r\n             return res.json()}\r\n    ).then(reesdata=>{setdata(reesdata)\r\n    setfiltereddata(reesdata)\r\n    setloader(true)\r\n       }))\r\n    //     Axios.get(\"https://shenoy-covid19-api.herokuapp.com/\").then(res=>{\r\n    //         console.log(res)\r\n    //         setdata(res.data.rawData) \r\n    //         setfiltereddata(res.data.rawData)\r\n            \r\n    // }\r\n    // ).catch(err=> console.log(err))\r\n    }\r\n    ,[])\r\n    \r\n    const submithandler=()=>{\r\n        console.log(\"corona alert\")\r\n       \r\n        if(data){\r\n        settable(true)\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const sorter=(event)=>{\r\n        console.log(event.target.value)\r\n        if(data){\r\n            if(event.target.value==='death'){\r\n            let byDeath=data.slice(0)\r\n            byDeath.sort((a,b)=>{\r\n                if(a.totalDeaths&&b.totalDeaths)\r\n                return parseInt(b.totalDeaths.replace(',',''))-parseInt(a.totalDeaths.replace(',',''))\r\n            })\r\n            \r\n            setfiltereddata(byDeath)\r\n            // console.log('deaathhhhhh')\r\n        }\r\n        else if(event.target.value==='cases'){\r\n            let byCases=data.slice(0)\r\n            byCases.sort((a,b)=>{\r\n                if(a.totalCases&&b.totalCases)\r\n                return parseInt(b.totalCases.replace(',',''))-parseInt(a.totalCases.replace(',',''))\r\n                return \r\n            })\r\n            setfiltereddata(byCases)\r\n            \r\n        }\r\n        else if(event.target.value==='name'){\r\n            let byName=data.slice(0)\r\n            byName.sort((a,b)=>{\r\n                if(a.country&&b.country){\r\n                let place1=a.country.toLowerCase()\r\n                let place2=b.country.toLowerCase()\r\n                return place2<place1 ? 1 : place2>place1 ?-1:0\r\n                }\r\n                return\r\n            })\r\n            setfiltereddata(byName)\r\n            \r\n        }\r\n        // else if(event.target.value==='distance'){\r\n        //     if (navigator.geolocation) {\r\n        //         navigator.geolocation.getCurrentPosition((pos)=>{\r\n        //             console.log(pos.coords.latitude,pos.coords.longitude)\r\n        //         });\r\n        //       } \r\n        // }\r\n        }\r\n    }\r\n\r\n    const change=(e)=>{\r\n       let newdata={}\r\n        newdata=data.filter((a,i)=>{\r\n            if(a['country'].toLowerCase().includes((e.target.value).toLowerCase())){\r\n                return a\r\n            }\r\n            return \r\n        })\r\n        console.log(newdata)\r\n        setfiltereddata(newdata)\r\n        return\r\n    }\r\n   \r\n    return (\r\n       !istable?<><div className=\"index\"><marquee scrollamount=\"8\" behavior=\"scroll\" direction=\"left\" style={{color:\"white\",marginTop:\"30px\",fontSize:\"1.5vw\"}}>*****Warning : Dont go out bitches......*****</marquee>\r\n       <h1 className=\"h\" style={{marginTop:'12vw'}}>COVID-19 Stats</h1></div>\r\n       <div className=\"index\"> {loader?<div className=\"buttonHolder\"><button className=\"butt\" type=\"submit\" onClick={submithandler}>click here</button></div>: <div className=\"spinner\"><Loader type=\"ThreeDots\" color=\"#2BAD60\" height={100} width={100} /></div>}\r\n       <Particlejs />\r\n       </div></>:\r\n       <div><CoronaSearch change={change} data={data}/><Select sorter={sorter}/><Scroll><CoronaTable data={filtereddata}/></Scroll></div>\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default Corona\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\nimport Corona from './Corona'\nimport * as serviceWorker from './serviceWorker';\n// import Example from './Example';\n// import Spinner from './Spinner'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <div className=\"index\">\n    <Corona />\n   \n    </div>\n    ,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}